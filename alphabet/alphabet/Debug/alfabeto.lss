
alfabeto.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000fa  00800100  00000988  00000a1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000988  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  008001fa  008001fa  00000b16  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b16  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b48  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000b88  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001dd9  00000000  00000000  00000c50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a39  00000000  00000000  00002a29  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cc8  00000000  00000000  00003462  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000208  00000000  00000000  0000412c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000550  00000000  00000000  00004334  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000980  00000000  00000000  00004884  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00005204  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 0a 04 	jmp	0x814	; 0x814 <__vector_3>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 79 04 	jmp	0x8f2	; 0x8f2 <__vector_13>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	93 02       	muls	r25, r19
  7e:	9d 02       	muls	r25, r29
  80:	a7 02       	muls	r26, r23
  82:	b1 02       	muls	r27, r17
  84:	bb 02       	muls	r27, r27
  86:	c5 02       	muls	r28, r21
  88:	cf 02       	muls	r28, r31
  8a:	d9 02       	muls	r29, r25
  8c:	e3 02       	muls	r30, r19
  8e:	ed 02       	muls	r30, r29
  90:	f7 02       	muls	r31, r23
  92:	01 03       	mulsu	r16, r17
  94:	0b 03       	fmul	r16, r19
  96:	15 03       	mulsu	r17, r21
  98:	3e 03       	fmul	r19, r22
  9a:	48 03       	fmul	r20, r16
  9c:	52 03       	mulsu	r21, r18
  9e:	5c 03       	fmul	r21, r20
  a0:	66 03       	mulsu	r22, r22
  a2:	70 03       	mulsu	r23, r16
  a4:	7a 03       	fmul	r23, r18
  a6:	84 03       	fmuls	r16, r20
  a8:	8e 03       	fmulsu	r16, r22
  aa:	98 03       	fmulsu	r17, r16
  ac:	a2 03       	fmuls	r18, r18
  ae:	ac 03       	fmulsu	r18, r20
  b0:	b6 03       	fmuls	r19, r22
  b2:	c0 03       	fmuls	r20, r16

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d4 e0       	ldi	r29, 0x04	; 4
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e8 e8       	ldi	r30, 0x88	; 136
  c8:	f9 e0       	ldi	r31, 0x09	; 9
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	aa 3f       	cpi	r26, 0xFA	; 250
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	aa ef       	ldi	r26, 0xFA	; 250
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	ae 3f       	cpi	r26, 0xFE	; 254
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 51 01 	call	0x2a2	; 0x2a2 <main>
  ea:	0c 94 c2 04 	jmp	0x984	; 0x984 <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <toggle_e>:
	for(i=j;i<5;i++)
	{
	lcd_putc(48+str[i]);
	}
	
}/*
  f2:	11 9a       	sbi	0x02, 1	; 2
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <toggle_e+0x4>
  f6:	11 98       	cbi	0x02, 1	; 2
  f8:	08 95       	ret

000000fa <lcd_write>:
  fa:	cf 93       	push	r28
  fc:	c8 2f       	mov	r28, r24
  fe:	66 23       	and	r22, r22
 100:	11 f0       	breq	.+4      	; 0x106 <lcd_write+0xc>
 102:	13 9a       	sbi	0x02, 3	; 2
 104:	01 c0       	rjmp	.+2      	; 0x108 <lcd_write+0xe>
 106:	13 98       	cbi	0x02, 3	; 2
 108:	12 98       	cbi	0x02, 2	; 2
 10a:	0f 9a       	sbi	0x01, 7	; 1
 10c:	0e 9a       	sbi	0x01, 6	; 1
 10e:	0d 9a       	sbi	0x01, 5	; 1
 110:	0c 9a       	sbi	0x01, 4	; 1
 112:	14 98       	cbi	0x02, 4	; 2
 114:	15 98       	cbi	0x02, 5	; 2
 116:	16 98       	cbi	0x02, 6	; 2
 118:	17 98       	cbi	0x02, 7	; 2
 11a:	cc 23       	and	r28, r28
 11c:	0c f4       	brge	.+2      	; 0x120 <lcd_write+0x26>
 11e:	14 9a       	sbi	0x02, 4	; 2
 120:	c6 fd       	sbrc	r28, 6
 122:	15 9a       	sbi	0x02, 5	; 2
 124:	c5 fd       	sbrc	r28, 5
 126:	16 9a       	sbi	0x02, 6	; 2
 128:	c4 fd       	sbrc	r28, 4
 12a:	17 9a       	sbi	0x02, 7	; 2
 12c:	0e 94 79 00 	call	0xf2	; 0xf2 <toggle_e>
 130:	14 98       	cbi	0x02, 4	; 2
 132:	15 98       	cbi	0x02, 5	; 2
 134:	16 98       	cbi	0x02, 6	; 2
 136:	17 98       	cbi	0x02, 7	; 2
 138:	c3 fd       	sbrc	r28, 3
 13a:	14 9a       	sbi	0x02, 4	; 2
 13c:	c2 fd       	sbrc	r28, 2
 13e:	15 9a       	sbi	0x02, 5	; 2
 140:	c1 fd       	sbrc	r28, 1
 142:	16 9a       	sbi	0x02, 6	; 2
 144:	c0 fd       	sbrc	r28, 0
 146:	17 9a       	sbi	0x02, 7	; 2
 148:	0e 94 79 00 	call	0xf2	; 0xf2 <toggle_e>
 14c:	17 9a       	sbi	0x02, 7	; 2
 14e:	16 9a       	sbi	0x02, 6	; 2
 150:	15 9a       	sbi	0x02, 5	; 2
 152:	14 9a       	sbi	0x02, 4	; 2
 154:	cf 91       	pop	r28
 156:	08 95       	ret

00000158 <lcd_command>:
 158:	60 e0       	ldi	r22, 0x00	; 0
 15a:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_write>
 15e:	08 95       	ret

00000160 <lcd_gotoxy>:
 160:	61 11       	cpse	r22, r1
 162:	04 c0       	rjmp	.+8      	; 0x16c <lcd_gotoxy+0xc>
 164:	80 58       	subi	r24, 0x80	; 128
 166:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
 16a:	0f c0       	rjmp	.+30     	; 0x18a <lcd_gotoxy+0x2a>
 16c:	61 30       	cpi	r22, 0x01	; 1
 16e:	21 f4       	brne	.+8      	; 0x178 <lcd_gotoxy+0x18>
 170:	80 54       	subi	r24, 0x40	; 64
 172:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
 176:	09 c0       	rjmp	.+18     	; 0x18a <lcd_gotoxy+0x2a>
 178:	62 30       	cpi	r22, 0x02	; 2
 17a:	21 f4       	brne	.+8      	; 0x184 <lcd_gotoxy+0x24>
 17c:	8c 56       	subi	r24, 0x6C	; 108
 17e:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
 182:	03 c0       	rjmp	.+6      	; 0x18a <lcd_gotoxy+0x2a>
 184:	8c 52       	subi	r24, 0x2C	; 44
 186:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
 18a:	80 e5       	ldi	r24, 0x50	; 80
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	f1 f7       	brne	.-4      	; 0x18e <lcd_gotoxy+0x2e>
 192:	08 95       	ret

00000194 <lcd_clrscr>:
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
 19a:	80 e2       	ldi	r24, 0x20	; 32
 19c:	9d e0       	ldi	r25, 0x0D	; 13
 19e:	01 97       	sbiw	r24, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <lcd_clrscr+0xa>
 1a2:	08 95       	ret

000001a4 <lcd_putc>:
 1a4:	61 e0       	ldi	r22, 0x01	; 1
 1a6:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_write>
 1aa:	80 e5       	ldi	r24, 0x50	; 80
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	01 97       	sbiw	r24, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <lcd_putc+0xa>
 1b2:	08 95       	ret

000001b4 <lcd_puts>:
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
 1b8:	ec 01       	movw	r28, r24
 1ba:	21 96       	adiw	r28, 0x01	; 1
 1bc:	fc 01       	movw	r30, r24
 1be:	80 81       	ld	r24, Z
 1c0:	88 23       	and	r24, r24
 1c2:	29 f0       	breq	.+10     	; 0x1ce <lcd_puts+0x1a>
 1c4:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <lcd_putc>
 1c8:	89 91       	ld	r24, Y+
 1ca:	81 11       	cpse	r24, r1
 1cc:	fb cf       	rjmp	.-10     	; 0x1c4 <lcd_puts+0x10>
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	08 95       	ret

000001d4 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 1d4:	1f 93       	push	r17
 1d6:	cf 93       	push	r28
 1d8:	df 93       	push	r29
 1da:	18 2f       	mov	r17, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
 1dc:	0b 9a       	sbi	0x01, 3	; 1
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
 1de:	0a 9a       	sbi	0x01, 2	; 1
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
 1e0:	09 9a       	sbi	0x01, 1	; 1
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
 1e2:	0f 9a       	sbi	0x01, 7	; 1
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
 1e4:	0e 9a       	sbi	0x01, 6	; 1
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
 1e6:	0d 9a       	sbi	0x01, 5	; 1
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
 1e8:	0c 9a       	sbi	0x01, 4	; 1
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 1ea:	80 e0       	ldi	r24, 0x00	; 0
 1ec:	9d e7       	ldi	r25, 0x7D	; 125
 1ee:	01 97       	sbiw	r24, 0x01	; 1
 1f0:	f1 f7       	brne	.-4      	; 0x1ee <lcd_init+0x1a>
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(16000);        /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);  // _BV(LCD_FUNCTION)>>4;
 1f2:	16 9a       	sbi	0x02, 6	; 2
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
 1f4:	17 9a       	sbi	0x02, 7	; 2
    lcd_e_toggle();
 1f6:	0e 94 79 00 	call	0xf2	; 0xf2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 1fa:	80 e0       	ldi	r24, 0x00	; 0
 1fc:	97 e2       	ldi	r25, 0x27	; 39
 1fe:	01 97       	sbiw	r24, 0x01	; 1
 200:	f1 f7       	brne	.-4      	; 0x1fe <lcd_init+0x2a>
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
    lcd_e_toggle();
    delay(4992);         /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
 202:	0e 94 79 00 	call	0xf2	; 0xf2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 206:	c0 e8       	ldi	r28, 0x80	; 128
 208:	d0 e0       	ldi	r29, 0x00	; 0
 20a:	fe 01       	movw	r30, r28
 20c:	31 97       	sbiw	r30, 0x01	; 1
 20e:	f1 f7       	brne	.-4      	; 0x20c <lcd_init+0x38>
    /* repeat last command */ 
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
 210:	0e 94 79 00 	call	0xf2	; 0xf2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 214:	fe 01       	movw	r30, r28
 216:	31 97       	sbiw	r30, 0x01	; 1
 218:	f1 f7       	brne	.-4      	; 0x216 <lcd_init+0x42>
    /* repeat last command a third time */
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
 21a:	17 98       	cbi	0x02, 7	; 2
    lcd_e_toggle();
 21c:	0e 94 79 00 	call	0xf2	; 0xf2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 220:	21 97       	sbiw	r28, 0x01	; 1
 222:	f1 f7       	brne	.-4      	; 0x220 <lcd_init+0x4c>
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
//    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
    lcd_command(LCD_FUNCTION_4BIT_2LINES);      /* function set: display lines  */
 224:	88 e2       	ldi	r24, 0x28	; 40
 226:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 22a:	c0 e5       	ldi	r28, 0x50	; 80
 22c:	d0 e0       	ldi	r29, 0x00	; 0
 22e:	fe 01       	movw	r30, r28
 230:	31 97       	sbiw	r30, 0x01	; 1
 232:	f1 f7       	brne	.-4      	; 0x230 <lcd_init+0x5c>
#else
//    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
    lcd_command(LCD_FUNCTION_4BIT_2LINES);      /* function set: display lines  */
	delay(40);
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 234:	88 e0       	ldi	r24, 0x08	; 8
 236:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 23a:	fe 01       	movw	r30, r28
 23c:	31 97       	sbiw	r30, 0x01	; 1
 23e:	f1 f7       	brne	.-4      	; 0x23c <lcd_init+0x68>
	delay(40);
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
	delay(40);
//    lcd_command(LCD_DISP_ON_CURSOR);              /* display off                  */
    lcd_clrscr();                           /* display clear                */ 
 240:	0e 94 ca 00 	call	0x194	; 0x194 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 244:	86 e0       	ldi	r24, 0x06	; 6
 246:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 24a:	fe 01       	movw	r30, r28
 24c:	31 97       	sbiw	r30, 0x01	; 1
 24e:	f1 f7       	brne	.-4      	; 0x24c <lcd_init+0x78>
	delay(40);
//    lcd_command(LCD_DISP_ON_CURSOR);              /* display off                  */
    lcd_clrscr();                           /* display clear                */ 
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
	delay(40);
    lcd_command(dispAttr);                  /* display/cursor control       */
 250:	81 2f       	mov	r24, r17
 252:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 256:	21 97       	sbiw	r28, 0x01	; 1
 258:	f1 f7       	brne	.-4      	; 0x256 <lcd_init+0x82>
    lcd_clrscr();                           /* display clear                */ 
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
	delay(40);
    lcd_command(dispAttr);                  /* display/cursor control       */
	delay(40);
}/* lcd_init */
 25a:	df 91       	pop	r29
 25c:	cf 91       	pop	r28
 25e:	1f 91       	pop	r17
 260:	08 95       	ret

00000262 <configuration>:



void configuration(){
	/////port
	DDRA=0b11111110;
 262:	8e ef       	ldi	r24, 0xFE	; 254
 264:	81 b9       	out	0x01, r24	; 1
	PORTA=0;
 266:	12 b8       	out	0x02, r1	; 2
	DDRB=0;
 268:	14 b8       	out	0x04, r1	; 4
	PORTB=(1<<PB2);
 26a:	84 e0       	ldi	r24, 0x04	; 4
 26c:	85 b9       	out	0x05, r24	; 5
	DDRC=1;
 26e:	91 e0       	ldi	r25, 0x01	; 1
 270:	97 b9       	out	0x07, r25	; 7
	PORTC=0;
 272:	18 b8       	out	0x08, r1	; 8

	/////interrupt
	EICRA=(1<<ISC21);
 274:	90 e2       	ldi	r25, 0x20	; 32
 276:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	EIMSK=(1<<INT2);
 27a:	8d bb       	out	0x1d, r24	; 29
	
	/////timer int
	TCCR1A=0;
 27c:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B|=(1<<WGM12)|(1<<CS12)|(1<<CS10);
 280:	e1 e8       	ldi	r30, 0x81	; 129
 282:	f0 e0       	ldi	r31, 0x00	; 0
 284:	80 81       	ld	r24, Z
 286:	8d 60       	ori	r24, 0x0D	; 13
 288:	80 83       	st	Z, r24
	TCCR1C=0;
 28a:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
	OCR1AH=0x0f;
 28e:	8f e0       	ldi	r24, 0x0F	; 15
 290:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
	OCR1AL=0xff;
 294:	8f ef       	ldi	r24, 0xFF	; 255
 296:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	TIMSK1=(1<<OCIE1A);
 29a:	82 e0       	ldi	r24, 0x02	; 2
 29c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 2a0:	08 95       	ret

000002a2 <main>:

char cont1=0, cont2=0, aux=0, word=0, write=0, write2=0, cont3=0;

int main(void)
{
	configuration();
 2a2:	0e 94 31 01 	call	0x262	; 0x262 <configuration>
	sei ();
 2a6:	78 94       	sei
	
	lcd_init(LCD_DISP_ON);
 2a8:	8c e0       	ldi	r24, 0x0C	; 12
 2aa:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <lcd_init>
	lcd_gotoxy(5,0);
 2ae:	60 e0       	ldi	r22, 0x00	; 0
 2b0:	85 e0       	ldi	r24, 0x05	; 5
 2b2:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
	lcd_puts("PROYECTO");	
 2b6:	80 e0       	ldi	r24, 0x00	; 0
 2b8:	91 e0       	ldi	r25, 0x01	; 1
 2ba:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
	lcd_gotoxy(2,1);
 2be:	61 e0       	ldi	r22, 0x01	; 1
 2c0:	82 e0       	ldi	r24, 0x02	; 2
 2c2:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
	lcd_puts("INSTRUMENTACION");
 2c6:	89 e0       	ldi	r24, 0x09	; 9
 2c8:	91 e0       	ldi	r25, 0x01	; 1
 2ca:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
	lcd_gotoxy(4,2);
 2ce:	62 e0       	ldi	r22, 0x02	; 2
 2d0:	84 e0       	ldi	r24, 0x04	; 4
 2d2:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
	lcd_puts("BIOMEDICA");
 2d6:	89 e1       	ldi	r24, 0x19	; 25
 2d8:	91 e0       	ldi	r25, 0x01	; 1
 2da:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2de:	2f ef       	ldi	r18, 0xFF	; 255
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	93 e5       	ldi	r25, 0x53	; 83
 2e4:	21 50       	subi	r18, 0x01	; 1
 2e6:	80 40       	sbci	r24, 0x00	; 0
 2e8:	90 40       	sbci	r25, 0x00	; 0
 2ea:	e1 f7       	brne	.-8      	; 0x2e4 <main+0x42>
 2ec:	00 c0       	rjmp	.+0      	; 0x2ee <main+0x4c>
 2ee:	00 00       	nop
    _delay_ms(3400);
	lcd_clrscr();
 2f0:	0e 94 ca 00 	call	0x194	; 0x194 <lcd_clrscr>
	
    while (1) 
    {	
		switch (cont1)
 2f4:	80 91 fd 01 	lds	r24, 0x01FD	; 0x8001fd <cont1>
 2f8:	81 30       	cpi	r24, 0x01	; 1
 2fa:	09 f4       	brne	.+2      	; 0x2fe <main+0x5c>
 2fc:	5d c0       	rjmp	.+186    	; 0x3b8 <main+0x116>
 2fe:	38 f0       	brcs	.+14     	; 0x30e <main+0x6c>
 300:	82 30       	cpi	r24, 0x02	; 2
 302:	09 f4       	brne	.+2      	; 0x306 <main+0x64>
 304:	95 c0       	rjmp	.+298    	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 306:	83 30       	cpi	r24, 0x03	; 3
 308:	09 f4       	brne	.+2      	; 0x30c <main+0x6a>
 30a:	c6 c0       	rjmp	.+396    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 30c:	f5 cf       	rjmp	.-22     	; 0x2f8 <main+0x56>
		{
		case 0:
			if (aux==0)
 30e:	80 91 fb 01 	lds	r24, 0x01FB	; 0x8001fb <aux>
 312:	81 11       	cpse	r24, r1
 314:	17 c0       	rjmp	.+46     	; 0x344 <main+0xa2>
			{
				lcd_gotoxy(0,0);
 316:	60 e0       	ldi	r22, 0x00	; 0
 318:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
				lcd_puts("*ABCDEFGHIJKLMN ");
 31c:	83 e2       	ldi	r24, 0x23	; 35
 31e:	91 e0       	ldi	r25, 0x01	; 1
 320:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
				lcd_gotoxy(0,1);
 324:	61 e0       	ldi	r22, 0x01	; 1
 326:	80 e0       	ldi	r24, 0x00	; 0
 328:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
				lcd_puts(" 0PQRSTUVWXYZ ESP");
 32c:	84 e3       	ldi	r24, 0x34	; 52
 32e:	91 e0       	ldi	r25, 0x01	; 1
 330:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
				lcd_gotoxy(0,2);
 334:	62 e0       	ldi	r22, 0x02	; 2
 336:	80 e0       	ldi	r24, 0x00	; 0
 338:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
				lcd_puts(" ERASE CLEAR");
 33c:	86 e4       	ldi	r24, 0x46	; 70
 33e:	91 e0       	ldi	r25, 0x01	; 1
 340:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
			}
			if (aux==1)
 344:	80 91 fb 01 	lds	r24, 0x01FB	; 0x8001fb <aux>
 348:	81 30       	cpi	r24, 0x01	; 1
 34a:	c1 f4       	brne	.+48     	; 0x37c <main+0xda>
			{
				lcd_gotoxy(0,0);
 34c:	60 e0       	ldi	r22, 0x00	; 0
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
				lcd_puts(" ABCDEFGHIJKLMN   ");
 354:	84 e5       	ldi	r24, 0x54	; 84
 356:	91 e0       	ldi	r25, 0x01	; 1
 358:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
				lcd_gotoxy(0,1);
 35c:	61 e0       	ldi	r22, 0x01	; 1
 35e:	80 e0       	ldi	r24, 0x00	; 0
 360:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
				lcd_puts("*0PQRSTUVWXYZ ESP");
 364:	87 e6       	ldi	r24, 0x67	; 103
 366:	91 e0       	ldi	r25, 0x01	; 1
 368:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
				lcd_gotoxy(0,2);
 36c:	62 e0       	ldi	r22, 0x02	; 2
 36e:	80 e0       	ldi	r24, 0x00	; 0
 370:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
				lcd_puts(" ERASE CLEAR");
 374:	86 e4       	ldi	r24, 0x46	; 70
 376:	91 e0       	ldi	r25, 0x01	; 1
 378:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
			}
				if (aux==2)
 37c:	80 91 fb 01 	lds	r24, 0x01FB	; 0x8001fb <aux>
 380:	82 30       	cpi	r24, 0x02	; 2
 382:	09 f0       	breq	.+2      	; 0x386 <main+0xe4>
 384:	b7 cf       	rjmp	.-146    	; 0x2f4 <main+0x52>
				{
					lcd_gotoxy(0,0);
 386:	60 e0       	ldi	r22, 0x00	; 0
 388:	80 e0       	ldi	r24, 0x00	; 0
 38a:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
					lcd_puts(" ABCDEFGHIJKLMN   ");
 38e:	84 e5       	ldi	r24, 0x54	; 84
 390:	91 e0       	ldi	r25, 0x01	; 1
 392:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
					lcd_gotoxy(0,1);
 396:	61 e0       	ldi	r22, 0x01	; 1
 398:	80 e0       	ldi	r24, 0x00	; 0
 39a:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
					lcd_puts(" 0PQRSTUVWXYZ ESP");
 39e:	84 e3       	ldi	r24, 0x34	; 52
 3a0:	91 e0       	ldi	r25, 0x01	; 1
 3a2:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
					lcd_gotoxy(0,2);
 3a6:	62 e0       	ldi	r22, 0x02	; 2
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
					lcd_puts("*ERASE CLEAR");
 3ae:	89 e7       	ldi	r24, 0x79	; 121
 3b0:	91 e0       	ldi	r25, 0x01	; 1
 3b2:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
 3b6:	9e cf       	rjmp	.-196    	; 0x2f4 <main+0x52>
 3b8:	8f e0       	ldi	r24, 0x0F	; 15
 3ba:	97 e2       	ldi	r25, 0x27	; 39
 3bc:	01 97       	sbiw	r24, 0x01	; 1
 3be:	f1 f7       	brne	.-4      	; 0x3bc <main+0x11a>
 3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <main+0x120>
 3c2:	00 00       	nop
				}
			break;
			
		case 1:
			_delay_ms(5);
			lcd_gotoxy(0,1);
 3c4:	61 e0       	ldi	r22, 0x01	; 1
 3c6:	80 e0       	ldi	r24, 0x00	; 0
 3c8:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
			lcd_puts("                    ");
 3cc:	87 e8       	ldi	r24, 0x87	; 135
 3ce:	91 e0       	ldi	r25, 0x01	; 1
 3d0:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
 3d4:	8f e0       	ldi	r24, 0x0F	; 15
 3d6:	97 e2       	ldi	r25, 0x27	; 39
 3d8:	01 97       	sbiw	r24, 0x01	; 1
 3da:	f1 f7       	brne	.-4      	; 0x3d8 <main+0x136>
 3dc:	00 c0       	rjmp	.+0      	; 0x3de <main+0x13c>
 3de:	00 00       	nop
			_delay_ms(5);
			lcd_gotoxy(0,2);
 3e0:	62 e0       	ldi	r22, 0x02	; 2
 3e2:	80 e0       	ldi	r24, 0x00	; 0
 3e4:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
			lcd_puts("                    ");
 3e8:	87 e8       	ldi	r24, 0x87	; 135
 3ea:	91 e0       	ldi	r25, 0x01	; 1
 3ec:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
 3f0:	8f e0       	ldi	r24, 0x0F	; 15
 3f2:	97 e2       	ldi	r25, 0x27	; 39
 3f4:	01 97       	sbiw	r24, 0x01	; 1
 3f6:	f1 f7       	brne	.-4      	; 0x3f4 <main+0x152>
 3f8:	00 c0       	rjmp	.+0      	; 0x3fa <main+0x158>
 3fa:	00 00       	nop

			_delay_ms(5);
			lcd_gotoxy(0,0);
 3fc:	60 e0       	ldi	r22, 0x00	; 0
 3fe:	80 e0       	ldi	r24, 0x00	; 0
 400:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
			lcd_puts(" ABCDEFGHIJKLMN    ");
 404:	8c e9       	ldi	r24, 0x9C	; 156
 406:	91 e0       	ldi	r25, 0x01	; 1
 408:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
			lcd_gotoxy(cont2,1);
 40c:	61 e0       	ldi	r22, 0x01	; 1
 40e:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <cont2>
 412:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
			lcd_puts(" * ");
 416:	80 eb       	ldi	r24, 0xB0	; 176
 418:	91 e0       	ldi	r25, 0x01	; 1
 41a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
			lcd_gotoxy(0,2);
 41e:	62 e0       	ldi	r22, 0x02	; 2
 420:	80 e0       	ldi	r24, 0x00	; 0
 422:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
			lcd_puts("                 ");
 426:	8a e8       	ldi	r24, 0x8A	; 138
 428:	91 e0       	ldi	r25, 0x01	; 1
 42a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
			break;
 42e:	62 cf       	rjmp	.-316    	; 0x2f4 <main+0x52>
 430:	8f e0       	ldi	r24, 0x0F	; 15
 432:	97 e2       	ldi	r25, 0x27	; 39
 434:	01 97       	sbiw	r24, 0x01	; 1
 436:	f1 f7       	brne	.-4      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 438:	00 c0       	rjmp	.+0      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 43a:	00 00       	nop
						
		case 2:
			_delay_ms(5);
				lcd_gotoxy(0,1);
 43c:	61 e0       	ldi	r22, 0x01	; 1
 43e:	80 e0       	ldi	r24, 0x00	; 0
 440:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
				lcd_puts("                    ");
 444:	87 e8       	ldi	r24, 0x87	; 135
 446:	91 e0       	ldi	r25, 0x01	; 1
 448:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
 44c:	8f e0       	ldi	r24, 0x0F	; 15
 44e:	97 e2       	ldi	r25, 0x27	; 39
 450:	01 97       	sbiw	r24, 0x01	; 1
 452:	f1 f7       	brne	.-4      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 454:	00 c0       	rjmp	.+0      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 456:	00 00       	nop
			_delay_ms(5);
				lcd_gotoxy(0,2);
 458:	62 e0       	ldi	r22, 0x02	; 2
 45a:	80 e0       	ldi	r24, 0x00	; 0
 45c:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
				lcd_puts("                    ");
 460:	87 e8       	ldi	r24, 0x87	; 135
 462:	91 e0       	ldi	r25, 0x01	; 1
 464:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
 468:	8f e0       	ldi	r24, 0x0F	; 15
 46a:	97 e2       	ldi	r25, 0x27	; 39
 46c:	01 97       	sbiw	r24, 0x01	; 1
 46e:	f1 f7       	brne	.-4      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 470:	00 c0       	rjmp	.+0      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 472:	00 00       	nop
			
			_delay_ms(5);
			lcd_gotoxy(0,0);
 474:	60 e0       	ldi	r22, 0x00	; 0
 476:	80 e0       	ldi	r24, 0x00	; 0
 478:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
			lcd_puts(" 0PQRSTUVWXYZ ESP");
 47c:	84 e3       	ldi	r24, 0x34	; 52
 47e:	91 e0       	ldi	r25, 0x01	; 1
 480:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
			lcd_gotoxy(cont2,1);
 484:	61 e0       	ldi	r22, 0x01	; 1
 486:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <cont2>
 48a:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
			lcd_puts(" * ");
 48e:	80 eb       	ldi	r24, 0xB0	; 176
 490:	91 e0       	ldi	r25, 0x01	; 1
 492:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		
			break;
 496:	2e cf       	rjmp	.-420    	; 0x2f4 <main+0x52>
 498:	8f e0       	ldi	r24, 0x0F	; 15
 49a:	97 e2       	ldi	r25, 0x27	; 39
 49c:	01 97       	sbiw	r24, 0x01	; 1
 49e:	f1 f7       	brne	.-4      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 4a2:	00 00       	nop
					
		case 3:
			_delay_ms(5);
			lcd_gotoxy(0,1);
 4a4:	61 e0       	ldi	r22, 0x01	; 1
 4a6:	80 e0       	ldi	r24, 0x00	; 0
 4a8:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
			lcd_puts("                    ");
 4ac:	87 e8       	ldi	r24, 0x87	; 135
 4ae:	91 e0       	ldi	r25, 0x01	; 1
 4b0:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
 4b4:	8f e0       	ldi	r24, 0x0F	; 15
 4b6:	97 e2       	ldi	r25, 0x27	; 39
 4b8:	01 97       	sbiw	r24, 0x01	; 1
 4ba:	f1 f7       	brne	.-4      	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4bc:	00 c0       	rjmp	.+0      	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4be:	00 00       	nop
			_delay_ms(5);
			lcd_gotoxy(0,2);
 4c0:	62 e0       	ldi	r22, 0x02	; 2
 4c2:	80 e0       	ldi	r24, 0x00	; 0
 4c4:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
			lcd_puts("                    ");
 4c8:	87 e8       	ldi	r24, 0x87	; 135
 4ca:	91 e0       	ldi	r25, 0x01	; 1
 4cc:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
 4d0:	8f e0       	ldi	r24, 0x0F	; 15
 4d2:	97 e2       	ldi	r25, 0x27	; 39
 4d4:	01 97       	sbiw	r24, 0x01	; 1
 4d6:	f1 f7       	brne	.-4      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4d8:	00 c0       	rjmp	.+0      	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4da:	00 00       	nop

		_delay_ms(5);
		lcd_gotoxy(0,0);
 4dc:	60 e0       	ldi	r22, 0x00	; 0
 4de:	80 e0       	ldi	r24, 0x00	; 0
 4e0:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts(" ERASE CLEAR   ");
 4e4:	84 eb       	ldi	r24, 0xB4	; 180
 4e6:	91 e0       	ldi	r25, 0x01	; 1
 4e8:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		lcd_gotoxy(cont2,1);
 4ec:	61 e0       	ldi	r22, 0x01	; 1
 4ee:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <cont2>
 4f2:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("    *    ");
 4f6:	85 ec       	ldi	r24, 0xC5	; 197
 4f8:	91 e0       	ldi	r25, 0x01	; 1
 4fa:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 4fe:	fa ce       	rjmp	.-524    	; 0x2f4 <main+0x52>

00000500 <selec1>:
 500:	8f e3       	ldi	r24, 0x3F	; 63
 502:	9c e9       	ldi	r25, 0x9C	; 156
 504:	01 97       	sbiw	r24, 0x01	; 1
 506:	f1 f7       	brne	.-4      	; 0x504 <selec1+0x4>
 508:	00 c0       	rjmp	.+0      	; 0x50a <selec1+0xa>
 50a:	00 00       	nop
}


void selec1(){
	_delay_ms(20);
	switch (cont2){
 50c:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <cont2>
 510:	8e 2f       	mov	r24, r30
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	8e 30       	cpi	r24, 0x0E	; 14
 516:	91 05       	cpc	r25, r1
 518:	08 f0       	brcs	.+2      	; 0x51c <selec1+0x1c>
 51a:	90 c0       	rjmp	.+288    	; 0x63c <selec1+0x13c>
 51c:	fc 01       	movw	r30, r24
 51e:	e2 5c       	subi	r30, 0xC2	; 194
 520:	ff 4f       	sbci	r31, 0xFF	; 255
 522:	0c 94 bc 04 	jmp	0x978	; 0x978 <__tablejump2__>
		case 0:
		lcd_gotoxy(cont3,3);
 526:	63 e0       	ldi	r22, 0x03	; 3
 528:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 52c:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("A");
 530:	81 e2       	ldi	r24, 0x21	; 33
 532:	91 e0       	ldi	r25, 0x01	; 1
 534:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 538:	81 c0       	rjmp	.+258    	; 0x63c <selec1+0x13c>
		case 1:
		lcd_gotoxy(cont3,3);
 53a:	63 e0       	ldi	r22, 0x03	; 3
 53c:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 540:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("B");
 544:	8f ec       	ldi	r24, 0xCF	; 207
 546:	91 e0       	ldi	r25, 0x01	; 1
 548:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 54c:	77 c0       	rjmp	.+238    	; 0x63c <selec1+0x13c>
		
		case 2:
		lcd_gotoxy(cont3,3);
 54e:	63 e0       	ldi	r22, 0x03	; 3
 550:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 554:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("C");
 558:	81 ed       	ldi	r24, 0xD1	; 209
 55a:	91 e0       	ldi	r25, 0x01	; 1
 55c:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 560:	6d c0       	rjmp	.+218    	; 0x63c <selec1+0x13c>
		
		case 3:
		lcd_gotoxy(cont3,3);
 562:	63 e0       	ldi	r22, 0x03	; 3
 564:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 568:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("D");
 56c:	83 ed       	ldi	r24, 0xD3	; 211
 56e:	91 e0       	ldi	r25, 0x01	; 1
 570:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 574:	63 c0       	rjmp	.+198    	; 0x63c <selec1+0x13c>
		
		case 4:
		lcd_gotoxy(cont3,3);
 576:	63 e0       	ldi	r22, 0x03	; 3
 578:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 57c:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("E");
 580:	85 ed       	ldi	r24, 0xD5	; 213
 582:	91 e0       	ldi	r25, 0x01	; 1
 584:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 588:	59 c0       	rjmp	.+178    	; 0x63c <selec1+0x13c>
		
		case 5:
		lcd_gotoxy(cont3,3);
 58a:	63 e0       	ldi	r22, 0x03	; 3
 58c:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 590:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("F");
 594:	87 ed       	ldi	r24, 0xD7	; 215
 596:	91 e0       	ldi	r25, 0x01	; 1
 598:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 59c:	4f c0       	rjmp	.+158    	; 0x63c <selec1+0x13c>
		
		case 6:
		lcd_gotoxy(cont3,3);
 59e:	63 e0       	ldi	r22, 0x03	; 3
 5a0:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 5a4:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("G");
 5a8:	89 ed       	ldi	r24, 0xD9	; 217
 5aa:	91 e0       	ldi	r25, 0x01	; 1
 5ac:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 5b0:	45 c0       	rjmp	.+138    	; 0x63c <selec1+0x13c>
		
		case 7:
		lcd_gotoxy(cont3,3);
 5b2:	63 e0       	ldi	r22, 0x03	; 3
 5b4:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 5b8:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("H");
 5bc:	8b ed       	ldi	r24, 0xDB	; 219
 5be:	91 e0       	ldi	r25, 0x01	; 1
 5c0:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 5c4:	3b c0       	rjmp	.+118    	; 0x63c <selec1+0x13c>
		
		case 8:
		lcd_gotoxy(cont3,3);
 5c6:	63 e0       	ldi	r22, 0x03	; 3
 5c8:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 5cc:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("I");
 5d0:	8d ed       	ldi	r24, 0xDD	; 221
 5d2:	91 e0       	ldi	r25, 0x01	; 1
 5d4:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 5d8:	31 c0       	rjmp	.+98     	; 0x63c <selec1+0x13c>
		
		case 9:
		lcd_gotoxy(cont3,3);
 5da:	63 e0       	ldi	r22, 0x03	; 3
 5dc:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 5e0:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("J");
 5e4:	8f ed       	ldi	r24, 0xDF	; 223
 5e6:	91 e0       	ldi	r25, 0x01	; 1
 5e8:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 5ec:	27 c0       	rjmp	.+78     	; 0x63c <selec1+0x13c>
		
		case 10:
		lcd_gotoxy(cont3,3);
 5ee:	63 e0       	ldi	r22, 0x03	; 3
 5f0:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 5f4:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("K");
 5f8:	81 ee       	ldi	r24, 0xE1	; 225
 5fa:	91 e0       	ldi	r25, 0x01	; 1
 5fc:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 600:	1d c0       	rjmp	.+58     	; 0x63c <selec1+0x13c>
		
		case 11:
		lcd_gotoxy(cont3,3);
 602:	63 e0       	ldi	r22, 0x03	; 3
 604:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 608:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("L");
 60c:	83 ee       	ldi	r24, 0xE3	; 227
 60e:	91 e0       	ldi	r25, 0x01	; 1
 610:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 614:	13 c0       	rjmp	.+38     	; 0x63c <selec1+0x13c>
		
		case 12:
		lcd_gotoxy(cont3,3);
 616:	63 e0       	ldi	r22, 0x03	; 3
 618:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 61c:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("M");
 620:	85 ee       	ldi	r24, 0xE5	; 229
 622:	91 e0       	ldi	r25, 0x01	; 1
 624:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 628:	09 c0       	rjmp	.+18     	; 0x63c <selec1+0x13c>
		
		case 13:
		lcd_gotoxy(cont3,3);
 62a:	63 e0       	ldi	r22, 0x03	; 3
 62c:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 630:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("N");
 634:	87 e1       	ldi	r24, 0x17	; 23
 636:	91 e0       	ldi	r25, 0x01	; 1
 638:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
		default:
		break;
		
	}
	cont1=0;
 63c:	10 92 fd 01 	sts	0x01FD, r1	; 0x8001fd <cont1>
	cont2=0;
 640:	10 92 fc 01 	sts	0x01FC, r1	; 0x8001fc <cont2>
	aux=0;
 644:	10 92 fb 01 	sts	0x01FB, r1	; 0x8001fb <aux>
 648:	8f e3       	ldi	r24, 0x3F	; 63
 64a:	9c e9       	ldi	r25, 0x9C	; 156
 64c:	01 97       	sbiw	r24, 0x01	; 1
 64e:	f1 f7       	brne	.-4      	; 0x64c <selec1+0x14c>
 650:	00 c0       	rjmp	.+0      	; 0x652 <selec1+0x152>
 652:	00 00       	nop
 654:	08 95       	ret

00000656 <selec2>:
 656:	8f e3       	ldi	r24, 0x3F	; 63
 658:	9c e9       	ldi	r25, 0x9C	; 156
 65a:	01 97       	sbiw	r24, 0x01	; 1
 65c:	f1 f7       	brne	.-4      	; 0x65a <selec2+0x4>
 65e:	00 c0       	rjmp	.+0      	; 0x660 <selec2+0xa>
 660:	00 00       	nop
	_delay_ms(20);
}

void selec2(){
	_delay_ms(20);
	switch(cont2){
 662:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <cont2>
 666:	8e 2f       	mov	r24, r30
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	8e 30       	cpi	r24, 0x0E	; 14
 66c:	91 05       	cpc	r25, r1
 66e:	08 f0       	brcs	.+2      	; 0x672 <selec2+0x1c>
 670:	90 c0       	rjmp	.+288    	; 0x792 <selec2+0x13c>
 672:	fc 01       	movw	r30, r24
 674:	e4 5b       	subi	r30, 0xB4	; 180
 676:	ff 4f       	sbci	r31, 0xFF	; 255
 678:	0c 94 bc 04 	jmp	0x978	; 0x978 <__tablejump2__>
		case 0:
		lcd_gotoxy(cont3,3);
 67c:	63 e0       	ldi	r22, 0x03	; 3
 67e:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 682:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("O");
 686:	87 e0       	ldi	r24, 0x07	; 7
 688:	91 e0       	ldi	r25, 0x01	; 1
 68a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 68e:	81 c0       	rjmp	.+258    	; 0x792 <selec2+0x13c>
		
		case 1:
		lcd_gotoxy(cont3,3);
 690:	63 e0       	ldi	r22, 0x03	; 3
 692:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 696:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("P");
 69a:	84 e4       	ldi	r24, 0x44	; 68
 69c:	91 e0       	ldi	r25, 0x01	; 1
 69e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 6a2:	77 c0       	rjmp	.+238    	; 0x792 <selec2+0x13c>
		
		case 2:
		lcd_gotoxy(cont3,3);
 6a4:	63 e0       	ldi	r22, 0x03	; 3
 6a6:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 6aa:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("Q");
 6ae:	87 ee       	ldi	r24, 0xE7	; 231
 6b0:	91 e0       	ldi	r25, 0x01	; 1
 6b2:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 6b6:	6d c0       	rjmp	.+218    	; 0x792 <selec2+0x13c>
		
		case 3:
		lcd_gotoxy(cont3,3);
 6b8:	63 e0       	ldi	r22, 0x03	; 3
 6ba:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 6be:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("R");
 6c2:	82 e5       	ldi	r24, 0x52	; 82
 6c4:	91 e0       	ldi	r25, 0x01	; 1
 6c6:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 6ca:	63 c0       	rjmp	.+198    	; 0x792 <selec2+0x13c>
		
		case 4:
		lcd_gotoxy(cont3,3);
 6cc:	63 e0       	ldi	r22, 0x03	; 3
 6ce:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 6d2:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("S");
 6d6:	89 ee       	ldi	r24, 0xE9	; 233
 6d8:	91 e0       	ldi	r25, 0x01	; 1
 6da:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 6de:	59 c0       	rjmp	.+178    	; 0x792 <selec2+0x13c>
		
		case 5:
		lcd_gotoxy(cont3,3);
 6e0:	63 e0       	ldi	r22, 0x03	; 3
 6e2:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 6e6:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("T");
 6ea:	8b ee       	ldi	r24, 0xEB	; 235
 6ec:	91 e0       	ldi	r25, 0x01	; 1
 6ee:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 6f2:	4f c0       	rjmp	.+158    	; 0x792 <selec2+0x13c>
		
		case 6:
		lcd_gotoxy(cont3,3);
 6f4:	63 e0       	ldi	r22, 0x03	; 3
 6f6:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 6fa:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("U");
 6fe:	8d ee       	ldi	r24, 0xED	; 237
 700:	91 e0       	ldi	r25, 0x01	; 1
 702:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 706:	45 c0       	rjmp	.+138    	; 0x792 <selec2+0x13c>
		
		case 7:
		lcd_gotoxy(cont3,3);
 708:	63 e0       	ldi	r22, 0x03	; 3
 70a:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 70e:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("V");
 712:	8f ee       	ldi	r24, 0xEF	; 239
 714:	91 e0       	ldi	r25, 0x01	; 1
 716:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 71a:	3b c0       	rjmp	.+118    	; 0x792 <selec2+0x13c>
		
		case 8:
		lcd_gotoxy(cont3,3);
 71c:	63 e0       	ldi	r22, 0x03	; 3
 71e:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 722:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("W");
 726:	81 ef       	ldi	r24, 0xF1	; 241
 728:	91 e0       	ldi	r25, 0x01	; 1
 72a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 72e:	31 c0       	rjmp	.+98     	; 0x792 <selec2+0x13c>
		
		case 9:
		lcd_gotoxy(cont3,3);
 730:	63 e0       	ldi	r22, 0x03	; 3
 732:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 736:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("X");
 73a:	83 ef       	ldi	r24, 0xF3	; 243
 73c:	91 e0       	ldi	r25, 0x01	; 1
 73e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 742:	27 c0       	rjmp	.+78     	; 0x792 <selec2+0x13c>
		
		case 10:
		lcd_gotoxy(cont3,3);
 744:	63 e0       	ldi	r22, 0x03	; 3
 746:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 74a:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("Y");
 74e:	85 ef       	ldi	r24, 0xF5	; 245
 750:	91 e0       	ldi	r25, 0x01	; 1
 752:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 756:	1d c0       	rjmp	.+58     	; 0x792 <selec2+0x13c>
		
		case 11:
		lcd_gotoxy(cont3,3);
 758:	63 e0       	ldi	r22, 0x03	; 3
 75a:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 75e:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("Z");
 762:	87 ef       	ldi	r24, 0xF7	; 247
 764:	91 e0       	ldi	r25, 0x01	; 1
 766:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 76a:	13 c0       	rjmp	.+38     	; 0x792 <selec2+0x13c>
		
		case 12:
		lcd_gotoxy(cont3,3);
 76c:	63 e0       	ldi	r22, 0x03	; 3
 76e:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 772:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts(" ");
 776:	8a e9       	ldi	r24, 0x9A	; 154
 778:	91 e0       	ldi	r25, 0x01	; 1
 77a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
 77e:	09 c0       	rjmp	.+18     	; 0x792 <selec2+0x13c>
		case 13:
		lcd_gotoxy(cont3,3);
 780:	63 e0       	ldi	r22, 0x03	; 3
 782:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 786:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts(" ");
 78a:	8a e9       	ldi	r24, 0x9A	; 154
 78c:	91 e0       	ldi	r25, 0x01	; 1
 78e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
		default:
		break;
	}
	cont1=0;
 792:	10 92 fd 01 	sts	0x01FD, r1	; 0x8001fd <cont1>
	cont2=0;
 796:	10 92 fc 01 	sts	0x01FC, r1	; 0x8001fc <cont2>
	aux=0;
 79a:	10 92 fb 01 	sts	0x01FB, r1	; 0x8001fb <aux>
 79e:	8f e3       	ldi	r24, 0x3F	; 63
 7a0:	9c e9       	ldi	r25, 0x9C	; 156
 7a2:	01 97       	sbiw	r24, 0x01	; 1
 7a4:	f1 f7       	brne	.-4      	; 0x7a2 <selec2+0x14c>
 7a6:	00 c0       	rjmp	.+0      	; 0x7a8 <selec2+0x152>
 7a8:	00 00       	nop
 7aa:	08 95       	ret

000007ac <selec3>:
 7ac:	8f e3       	ldi	r24, 0x3F	; 63
 7ae:	9c e9       	ldi	r25, 0x9C	; 156
 7b0:	01 97       	sbiw	r24, 0x01	; 1
 7b2:	f1 f7       	brne	.-4      	; 0x7b0 <selec3+0x4>
 7b4:	00 c0       	rjmp	.+0      	; 0x7b6 <selec3+0xa>
 7b6:	00 00       	nop
	_delay_ms(20);
}

void selec3(){
	_delay_ms(20);
	switch(cont2)
 7b8:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <cont2>
 7bc:	88 23       	and	r24, r24
 7be:	19 f0       	breq	.+6      	; 0x7c6 <selec3+0x1a>
 7c0:	87 30       	cpi	r24, 0x07	; 7
 7c2:	99 f0       	breq	.+38     	; 0x7ea <selec3+0x3e>
 7c4:	1a c0       	rjmp	.+52     	; 0x7fa <selec3+0x4e>
	{
		case 0:
		cont3-=1;
 7c6:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 7ca:	81 50       	subi	r24, 0x01	; 1
 7cc:	80 93 fa 01 	sts	0x01FA, r24	; 0x8001fa <__data_end>
		lcd_gotoxy(cont3,3);
 7d0:	63 e0       	ldi	r22, 0x03	; 3
 7d2:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts(" ");
 7d6:	8a e9       	ldi	r24, 0x9A	; 154
 7d8:	91 e0       	ldi	r25, 0x01	; 1
 7da:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		cont3-=1;
 7de:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 7e2:	81 50       	subi	r24, 0x01	; 1
 7e4:	80 93 fa 01 	sts	0x01FA, r24	; 0x8001fa <__data_end>
		break;
 7e8:	08 c0       	rjmp	.+16     	; 0x7fa <selec3+0x4e>
		case 7:
		lcd_gotoxy(0,3);
 7ea:	63 e0       	ldi	r22, 0x03	; 3
 7ec:	80 e0       	ldi	r24, 0x00	; 0
 7ee:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_gotoxy>
		lcd_puts("                    ");
 7f2:	87 e8       	ldi	r24, 0x87	; 135
 7f4:	91 e0       	ldi	r25, 0x01	; 1
 7f6:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_puts>
		break;
		default:
		break;
	}
	cont1=0;
 7fa:	10 92 fd 01 	sts	0x01FD, r1	; 0x8001fd <cont1>
	cont2=0;
 7fe:	10 92 fc 01 	sts	0x01FC, r1	; 0x8001fc <cont2>
	aux=0;
 802:	10 92 fb 01 	sts	0x01FB, r1	; 0x8001fb <aux>
 806:	8f e3       	ldi	r24, 0x3F	; 63
 808:	9c e9       	ldi	r25, 0x9C	; 156
 80a:	01 97       	sbiw	r24, 0x01	; 1
 80c:	f1 f7       	brne	.-4      	; 0x80a <selec3+0x5e>
 80e:	00 c0       	rjmp	.+0      	; 0x810 <selec3+0x64>
 810:	00 00       	nop
 812:	08 95       	ret

00000814 <__vector_3>:
	_delay_ms(20);
}

ISR (INT2_vect){
 814:	1f 92       	push	r1
 816:	0f 92       	push	r0
 818:	0f b6       	in	r0, 0x3f	; 63
 81a:	0f 92       	push	r0
 81c:	11 24       	eor	r1, r1
 81e:	2f 93       	push	r18
 820:	3f 93       	push	r19
 822:	4f 93       	push	r20
 824:	5f 93       	push	r21
 826:	6f 93       	push	r22
 828:	7f 93       	push	r23
 82a:	8f 93       	push	r24
 82c:	9f 93       	push	r25
 82e:	af 93       	push	r26
 830:	bf 93       	push	r27
 832:	ef 93       	push	r30
 834:	ff 93       	push	r31
 836:	2f e7       	ldi	r18, 0x7F	; 127
 838:	88 e3       	ldi	r24, 0x38	; 56
 83a:	91 e0       	ldi	r25, 0x01	; 1
 83c:	21 50       	subi	r18, 0x01	; 1
 83e:	80 40       	sbci	r24, 0x00	; 0
 840:	90 40       	sbci	r25, 0x00	; 0
 842:	e1 f7       	brne	.-8      	; 0x83c <__vector_3+0x28>
 844:	00 c0       	rjmp	.+0      	; 0x846 <__vector_3+0x32>
 846:	00 00       	nop
	_delay_ms(50);
	switch(cont1){
 848:	80 91 fd 01 	lds	r24, 0x01FD	; 0x8001fd <cont1>
 84c:	81 30       	cpi	r24, 0x01	; 1
 84e:	d1 f0       	breq	.+52     	; 0x884 <__vector_3+0x70>
 850:	28 f0       	brcs	.+10     	; 0x85c <__vector_3+0x48>
 852:	82 30       	cpi	r24, 0x02	; 2
 854:	21 f1       	breq	.+72     	; 0x89e <__vector_3+0x8a>
 856:	83 30       	cpi	r24, 0x03	; 3
 858:	79 f1       	breq	.+94     	; 0x8b8 <__vector_3+0xa4>
 85a:	3a c0       	rjmp	.+116    	; 0x8d0 <__vector_3+0xbc>
		case 0:
	if (aux==0){
 85c:	80 91 fb 01 	lds	r24, 0x01FB	; 0x8001fb <aux>
 860:	81 11       	cpse	r24, r1
 862:	04 c0       	rjmp	.+8      	; 0x86c <__vector_3+0x58>
		
		cont1=1;
 864:	81 e0       	ldi	r24, 0x01	; 1
 866:	80 93 fd 01 	sts	0x01FD, r24	; 0x8001fd <cont1>
 86a:	32 c0       	rjmp	.+100    	; 0x8d0 <__vector_3+0xbc>
	}
	if (aux==1){
 86c:	81 30       	cpi	r24, 0x01	; 1
 86e:	21 f4       	brne	.+8      	; 0x878 <__vector_3+0x64>
		
		cont1=2;
 870:	82 e0       	ldi	r24, 0x02	; 2
 872:	80 93 fd 01 	sts	0x01FD, r24	; 0x8001fd <cont1>
 876:	2c c0       	rjmp	.+88     	; 0x8d0 <__vector_3+0xbc>
	}
	if (aux==2){
 878:	82 30       	cpi	r24, 0x02	; 2
 87a:	51 f5       	brne	.+84     	; 0x8d0 <__vector_3+0xbc>
		
		cont1=3;
 87c:	83 e0       	ldi	r24, 0x03	; 3
 87e:	80 93 fd 01 	sts	0x01FD, r24	; 0x8001fd <cont1>
 882:	26 c0       	rjmp	.+76     	; 0x8d0 <__vector_3+0xbc>
	}
	break;
	case 1:
		if (cont3==20)
 884:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 888:	84 31       	cpi	r24, 0x14	; 20
 88a:	19 f4       	brne	.+6      	; 0x892 <__vector_3+0x7e>
		{
			cont3=0;
 88c:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <__data_end>
 890:	1f c0       	rjmp	.+62     	; 0x8d0 <__vector_3+0xbc>
		}
		else{
		cont3+=1;
 892:	8f 5f       	subi	r24, 0xFF	; 255
 894:	80 93 fa 01 	sts	0x01FA, r24	; 0x8001fa <__data_end>
		selec1();
 898:	0e 94 80 02 	call	0x500	; 0x500 <selec1>
 89c:	19 c0       	rjmp	.+50     	; 0x8d0 <__vector_3+0xbc>
		}
	break;
	case 2:
		if (cont3==20)
 89e:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 8a2:	84 31       	cpi	r24, 0x14	; 20
 8a4:	19 f4       	brne	.+6      	; 0x8ac <__vector_3+0x98>
		{
			cont3=0;
 8a6:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <__data_end>
 8aa:	12 c0       	rjmp	.+36     	; 0x8d0 <__vector_3+0xbc>
		}
		else{
		cont3+=1;
 8ac:	8f 5f       	subi	r24, 0xFF	; 255
 8ae:	80 93 fa 01 	sts	0x01FA, r24	; 0x8001fa <__data_end>
		selec2();
 8b2:	0e 94 2b 03 	call	0x656	; 0x656 <selec2>
 8b6:	0c c0       	rjmp	.+24     	; 0x8d0 <__vector_3+0xbc>
		
		}
	break;
	
	case 3:
	if (cont3==20)
 8b8:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end>
 8bc:	84 31       	cpi	r24, 0x14	; 20
 8be:	19 f4       	brne	.+6      	; 0x8c6 <__vector_3+0xb2>
	{	
		
		cont3=0;
 8c0:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <__data_end>
 8c4:	05 c0       	rjmp	.+10     	; 0x8d0 <__vector_3+0xbc>
	}
	else{
		cont3+=1;
 8c6:	8f 5f       	subi	r24, 0xFF	; 255
 8c8:	80 93 fa 01 	sts	0x01FA, r24	; 0x8001fa <__data_end>
		selec3();
 8cc:	0e 94 d6 03 	call	0x7ac	; 0x7ac <selec3>
	break;
	}
	

	
}
 8d0:	ff 91       	pop	r31
 8d2:	ef 91       	pop	r30
 8d4:	bf 91       	pop	r27
 8d6:	af 91       	pop	r26
 8d8:	9f 91       	pop	r25
 8da:	8f 91       	pop	r24
 8dc:	7f 91       	pop	r23
 8de:	6f 91       	pop	r22
 8e0:	5f 91       	pop	r21
 8e2:	4f 91       	pop	r20
 8e4:	3f 91       	pop	r19
 8e6:	2f 91       	pop	r18
 8e8:	0f 90       	pop	r0
 8ea:	0f be       	out	0x3f, r0	; 63
 8ec:	0f 90       	pop	r0
 8ee:	1f 90       	pop	r1
 8f0:	18 95       	reti

000008f2 <__vector_13>:

ISR (TIMER1_COMPA_vect){
 8f2:	1f 92       	push	r1
 8f4:	0f 92       	push	r0
 8f6:	0f b6       	in	r0, 0x3f	; 63
 8f8:	0f 92       	push	r0
 8fa:	11 24       	eor	r1, r1
 8fc:	8f 93       	push	r24
 8fe:	9f 93       	push	r25
	if (cont1==0){
 900:	80 91 fd 01 	lds	r24, 0x01FD	; 0x8001fd <cont1>
 904:	81 11       	cpse	r24, r1
 906:	0b c0       	rjmp	.+22     	; 0x91e <__vector_13+0x2c>
		if (aux==3)
 908:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <aux>
 90c:	93 30       	cpi	r25, 0x03	; 3
 90e:	19 f4       	brne	.+6      	; 0x916 <__vector_13+0x24>
		{
			aux=0;
 910:	10 92 fb 01 	sts	0x01FB, r1	; 0x8001fb <aux>
 914:	1e c0       	rjmp	.+60     	; 0x952 <__vector_13+0x60>
		}
		else {
			aux+=1;
 916:	9f 5f       	subi	r25, 0xFF	; 255
 918:	90 93 fb 01 	sts	0x01FB, r25	; 0x8001fb <aux>
 91c:	1a c0       	rjmp	.+52     	; 0x952 <__vector_13+0x60>
		}
		
	}
	
	if (cont1==1)////ABC
 91e:	81 30       	cpi	r24, 0x01	; 1
 920:	59 f4       	brne	.+22     	; 0x938 <__vector_13+0x46>
	{
		if (cont2==14)
 922:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <cont2>
 926:	8e 30       	cpi	r24, 0x0E	; 14
 928:	19 f4       	brne	.+6      	; 0x930 <__vector_13+0x3e>
		{
			cont2=0;
 92a:	10 92 fc 01 	sts	0x01FC, r1	; 0x8001fc <cont2>
 92e:	1d c0       	rjmp	.+58     	; 0x96a <__vector_13+0x78>
		}
		else
		{
			cont2+=1;
 930:	8f 5f       	subi	r24, 0xFF	; 255
 932:	80 93 fc 01 	sts	0x01FC, r24	; 0x8001fc <cont2>
 936:	19 c0       	rjmp	.+50     	; 0x96a <__vector_13+0x78>
		}
	}
	if (cont1==2)////OPQ
 938:	82 30       	cpi	r24, 0x02	; 2
 93a:	59 f4       	brne	.+22     	; 0x952 <__vector_13+0x60>
	{
		
		if (cont2==14)
 93c:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <cont2>
 940:	8e 30       	cpi	r24, 0x0E	; 14
 942:	19 f4       	brne	.+6      	; 0x94a <__vector_13+0x58>
		{
			cont2=0;
 944:	10 92 fc 01 	sts	0x01FC, r1	; 0x8001fc <cont2>
 948:	10 c0       	rjmp	.+32     	; 0x96a <__vector_13+0x78>
		}
		else
		{
			cont2+=1;
 94a:	8f 5f       	subi	r24, 0xFF	; 255
 94c:	80 93 fc 01 	sts	0x01FC, r24	; 0x8001fc <cont2>
 950:	0c c0       	rjmp	.+24     	; 0x96a <__vector_13+0x78>
		}
	}
	if (cont1==3)////ERASE clear
 952:	83 30       	cpi	r24, 0x03	; 3
 954:	51 f4       	brne	.+20     	; 0x96a <__vector_13+0x78>
	{
		
		if (cont2==7)
 956:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <cont2>
 95a:	87 30       	cpi	r24, 0x07	; 7
 95c:	19 f4       	brne	.+6      	; 0x964 <__vector_13+0x72>
		{
			cont2=0;
 95e:	10 92 fc 01 	sts	0x01FC, r1	; 0x8001fc <cont2>
 962:	03 c0       	rjmp	.+6      	; 0x96a <__vector_13+0x78>
		}
		else
		{
			cont2=cont2+7;
 964:	89 5f       	subi	r24, 0xF9	; 249
 966:	80 93 fc 01 	sts	0x01FC, r24	; 0x8001fc <cont2>
		}
	}
 96a:	9f 91       	pop	r25
 96c:	8f 91       	pop	r24
 96e:	0f 90       	pop	r0
 970:	0f be       	out	0x3f, r0	; 63
 972:	0f 90       	pop	r0
 974:	1f 90       	pop	r1
 976:	18 95       	reti

00000978 <__tablejump2__>:
 978:	ee 0f       	add	r30, r30
 97a:	ff 1f       	adc	r31, r31
 97c:	05 90       	lpm	r0, Z+
 97e:	f4 91       	lpm	r31, Z
 980:	e0 2d       	mov	r30, r0
 982:	09 94       	ijmp

00000984 <_exit>:
 984:	f8 94       	cli

00000986 <__stop_program>:
 986:	ff cf       	rjmp	.-2      	; 0x986 <__stop_program>
